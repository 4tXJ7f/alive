Name: AddSub:922
Pre: isSignBit(C)
%a = add %x, C
  =>
%a = xor %x, C


Name: AddSub:937
%ax = zext i1 %a
%c = add %ax, %b
  =>
%b1 = add %b, 1
%c = select %a, %b1, %b


Name: AddSub:941, 980
Pre: isSignBit(C1)
%b = xor %a, C1
%d = add %b, C2
  =>
%sc = xor C1, C2
%d = add %a, %sc


Name: AddSub:994
%a = add %b, %b
  =>
%a = shl %b, 1


Name: AddSub:1003
%na = sub 0, %a
%c = add %na, %b
  =>
%c = sub %b, %a


Name: AddSub:1004
%na = sub 0, %a
%nb = sub 0, %b
%c = add %na, %nb
  =>
%ab = add %a, %b
%c = sub 0, %ab


Name: AddSub:1050
%nb = sub 0, %b
%c = add %a, %nb
  =>
%c = sub %a, %b


Name: AddSub:1074
%nx = xor %x, -1
%r = add %nx, C
  =>
%c1 = sub C, 1
%r = sub %c1, %x


Name: AddSub:1080
Pre: ~((C1 & -C1)-1) == ~((C1 & -C1)-1) & C2
%xc2 = and %x, C2
%r = add %xc2, C1
  =>
%xc1 = add %x, C1
%r = and %xc1, C2


Name: AddSub:1108
%na = sub %n, %a
%s = select %x, 0, %na
%r = add %s, %a
  =>
%r = select %x, %a, %n


Name: AddSub:1149
Pre: WillNotOverflowSignedAdd(%x,%y)
%sx = sext %x
%sy = sext %y
%c = add %sx, %sy
  =>
%xy = add %x, %y
%c = sext %xy


Name: AddSub:1166
%aab = and %a, %b
%aob = xor %a, %b
%c = add %aab, %aob
  =>
%c = or %a, %b


Name: AddSub:1364
%na = sub 0, %a
%r = sub %x, %na
  =>
%r = add %x, %a


Name: AddSub:1371
%r = sub i1 %x, %y
  =>
%r = xor %x, %y


Name: AddSub:1375
%r = sub -1, %a
  =>
%r = xor %a, -1


Name: AddSub:1381
%nx = xor %x, -1
%r = sub C, %nx
  =>
%c1 = add C, 1
%r = add %x, %c1


Name: AddSub:1386
Pre: C == width(%a) - 1

%a = lshr %x, C
%r = sub 0, %a
  =>
%r = ashr %x, C
